#!/usr/bin/env bash

# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

bin=`dirname "$0"`
bin=`cd "$bin"; pwd`

# if no args specified, show usage
if [ $# = 0 ]; then
  echo "Usage: katta-ec2 COMMAND"
  echo "where COMMAND is one of:"
  echo "  list                                 list all running Katta EC2 clusters"
  echo "  launch-cluster <group> <num nodes>   launch a cluster of Katta EC2 instances - launch-master then launch-slaves"
  echo "  launch-master  <group>               launch or find a cluster master"
  echo "  launch-nodes  <group> <num nodes>    launch the cluster nodes"
  echo "  terminate-cluster  <group>           terminate all Katta EC2 instances"
  echo "  delete-cluster <group>               delete the group information for a terminated cluster"
  echo "  login  <group|instance id>           login to the master node of the Katta EC2 cluster"
  echo "  screen <group|instance id>           start or attach 'screen' on the master node of the Katta EC2 cluster"
  echo "  proxy  <group|instance id>           start a socks proxy on localhost:6666 (use w/foxyproxy)"
  echo "  push   <group> <file>                scp a file to the master node of the Katta EC2 cluster"
  echo "  mount  <instance id> <path> <group>  shares the path of the instance with all instances in the given group with nfs"
  echo "  <shell cmd> <group|instance id>      execute any command remotely on the master"
  echo "  create-image                         create a Katta AMI"
  exit 1
fi

# get arguments
COMMAND="$1"
shift

if [ "$COMMAND" = "create-image" ] ; then
  . "$bin"/create-katta-image $*
elif [ "$COMMAND" = "launch-cluster" ] ; then
  . "$bin"/launch-katta-cluster $*
elif [ "$COMMAND" = "launch-master" ] ; then
  . "$bin"/launch-katta-master $*
elif [ "$COMMAND" = "launch-nodes" ] ; then
  . "$bin"/launch-katta-nodes $*
elif [ "$COMMAND" = "delete-cluster" ] ; then
  . "$bin"/delete-katta-cluster $*
elif [ "$COMMAND" = "terminate-cluster" ] ; then
  . "$bin"/terminate-katta-cluster $*
elif [ "$COMMAND" = "list" ] ; then
  . "$bin"/list-katta-clusters
elif [ "$COMMAND" = "mount" ] ; then
  . "$bin"/create-nfs-share $* 
else
  . "$bin"/cmd-katta-cluster "$COMMAND" $*
fi

